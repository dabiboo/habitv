<?php

function nodeaccess_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {nodeaccess} (
          nid int(10) unsigned NOT NULL default '0',
          gid int(10) unsigned NOT NULL default '0',
          realm varchar(255) NOT NULL default '',
          grant_view tinyint(1) unsigned NOT NULL default '0',
          grant_update tinyint(1) unsigned NOT NULL default '0',
          grant_delete tinyint(1) unsigned NOT NULL default '0',
          PRIMARY KEY  (nid,gid,realm)
        ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;
    case 'pgsql':
      db_query("CREATE TABLE {nodeaccess} (
        nid int_unsigned NOT NULL default '0',
        gid int_unsigned NOT NULL default '0',
        realm varchar(255) NOT NULL default '',
        grant_view smallint_unsigned NOT NULL default '0',
        grant_update smallint_unsigned NOT NULL default '0',
        grant_delete smallint_unsigned NOT NULL default '0',
        PRIMARY KEY (nid,gid,realm)
      )");
    break;
  }
  // set up default permissions to be view for authenticated and anonymouse users
  $grants = array();
  $grants[] = array('gid' => 1, 'realm' => 'nodeaccess_rid', 'grant_view' => 1,
              'grant_update' => 0, 'grant_delete' => 0);
  $grants[] = array('gid' => 2, 'realm' => 'nodeaccess_rid', 'grant_view' => 1,
              'grant_update' => 0, 'grant_delete' => 0);
  $author = array();
  foreach (node_get_types() as $type => $name) {
    variable_set('nodeaccess_' . $type, $grants);
    $author[$type] = array('grant_view' => 1, 'grant_update' => 1, 'grant_delete' => 1);
  }
  variable_set('nodeaccess_authors', $author);
}

function nodeaccess_update_1() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {nodeaccess} (
          nid int(10) unsigned NOT NULL default '0',
          gid int(10) unsigned NOT NULL default '0',
          realm varchar(255) NOT NULL default '',
          grant_view tinyint(1) unsigned NOT NULL default '0',
          grant_update tinyint(1) unsigned NOT NULL default '0',
          grant_delete tinyint(1) unsigned NOT NULL default '0',
          PRIMARY KEY  (nid,gid,realm)
        ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;
    case 'pgsql':
      db_query("CREATE TABLE {nodeaccess} (
        nid int_unsigned NOT NULL default '0',
        gid int_unsigned NOT NULL default '0',
        realm varchar(255) NOT NULL default '',
        grant_view smallint_unsigned NOT NULL default '0',
        grant_update smallint_unsigned NOT NULL default '0',
        grant_delete smallint_unsigned NOT NULL default '0',
        PRIMARY KEY (nid,gid,realm)
      )");
    break;
  }

  // migrate variables if we're updating
  foreach (node_get_types() as $type => $name) {
    $perm = variable_get('nodeaccess_' . $type, array());
    if (count($perm) > 0) {
      foreach ($perm['rid'] as $role => $grants) {
        $new[] = array('realm' => 'nodeaccess_rid',
                       'gid' => $grants[0],
                       'grant_view' => $grants['grant_view'],
                       'grant_update' => $grants['grant_update'],
                       'grant_delete' => $grants['grant_delete']
                       );
        // save variable, once this works...
      }
      variable_set('nodeaccess_' . $type, $new);
    }
  }

  // populate our nodeaccess table with data from node_access
  $result = db_query("SELECT na.nid, na.gid, na.realm, na.grant_view, na.grant_update, na.grant_delete, n.type FROM {node_access} na LEFT JOIN {node} n on n.nid=na.nid WHERE na.realm = 'nodeaccess_uid' OR na.realm = 'nodeaccess_rid'");
  while ($row = db_fetch_object($result)) {
    $default = variable_get('nodeaccess_' . $row->type, array());
    if ($default['grant_view'] != $row->grant_view &&
        $default['grant_update'] != $row->grant_update &&
        $default['grant_delete'] != $row->grant_delete) {
      db_query("INSERT into {nodeaccess} (nid, gid, realm, grant_view, grant_update, grant_delete) values (%d, %d, '%s', %d, %d, %d)",
        $row->nid, $row->gid, $row->realm, $row->grant_view, $row->grant_update, $row->grant_delete);
    }
  }
}

function nodeaccess_update_2() {
  // changed menu location, need to clear menu cache
  cache_clear_all(NULL, 'cache_menu');
}

function nodeaccess_uninstall() {
  db_query("DELETE FROM {nodeaccess}");
  variable_del('nodeaccess-types');
  variable_del('nodeaccess-roles');
  variable_del('nodeaccess-priority');
  variable_del('nodeaccess_authors');
  foreach (node_get_types() as $type => $name) {
    variable_del('nodeaccess_' . $type);
  }
  db_query('DROP TABLE {nodeaccess}'); 
}

?>
